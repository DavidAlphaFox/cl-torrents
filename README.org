TLDR: see the [[https://vindarel.github.io/cl-torrents/tutorial.html][tutorial]] !

[[https://gitlab.com/vindarel/cl-torrents][file:https://gitlab.com/vindarel/cl-torrents/badges/master/pipeline.svg]]

* cl-torrents

  This is a  little tool for the  lisp REPL or the  terminal to search
  for torrents and get magnet links.

  We  currently scrape  the following  sites and  present the  results
  sorted by seeders:

- the  Pirate Bay ([[https://piratebay.to/][piratebay.to]])
- Kickass Torrents ([[https://katcr.co][katcr.co]])
- Torrent.cd ([[https://torrent.cd/][torrent.cd]]).

** Installation

   We may (and should) provide an executable.

   This  is not  distributed with  Quicklisp (or Roswell) (yet?).  Clone this  repo
   where Quicklisp can find it:

: git clone git@github.com:vindarel/cl-torrents.git ~/quicklisp/local-projects/

and load it:

: (ql:quickload "cl-torrents")


** Usage

   We can  use this little app  both in a  Lisp REPL (Slime) and  in a
   terminal.

*** Lisp REPL

   Search for torrents:

#+BEGIN_SRC text
(torrents "matrix")
  [...]
  6: The Matrix Revolutions (2003) BRRip [Dual Audio] [Hindi+Eng]
  5: Matrix (1999)Blu-Ray 720p Dublado PT-BR - mo93438
  4: The Matrix Trilogy (1999-2003) BDRip 1080p Dual Audio [ Hind
  3: The Matrix Trilogy (1999-2003) BluRay BDRip 1080p AC3
  2: The Matrix Trilogy (1999-2003) + Extras 1080p BluRay x264 Du
  1: The Matrix Reloaded (2003) FullHD, Dual Audio: English + Spa
  0: Matrix FRENCH DVDRIP 1999 COOL
#+END_SRC

  To help finding the most  relevant results (the website sometimes is
  a bit relaxed  with our search terms), each keyword  is printed in a
  different color:

#+html: <p align="center"><img src="img-colored-results.png" /></p>

  (you need  to enable ansi  colors in Slime,  see [[https://github.com/enriquefernandez/slime-repl-ansi-color][slime-repl-ansi-on]].
  Disable this feature with =(setf cl-ansi-text:*enabled* nil)=)


  We get a magnet link with:

#+BEGIN_SRC lisp
(magnet 0)
;; "magnet:?xt=urn:btih:40eca43690cf1b99b0a4d485ebf4855d20b0bac5"
#+END_SRC

  or the option =-m <index>=.

  And voilà :)

  We may add more features, eventually.  Our goal is rather to write a
  tutorial to show you diverse Common Lisp topics.


*** Command line

#+BEGIN_SRC text
$ torrents -h
CL-torrents. Usage:

Available options:
  -h, --help               print this help text
  -v, --verbose            verbose output
  -n, --nb ARG             set the maximum number of results to print.
  -m, --magnet ARG         get the magnet link of the given search result.
#+END_SRC

: $ torrents -n 1 matrix french 1999 cool -m 0

#+html: <p align='center'><img src='img-cli.png' /></p>

Results are cached.

** Settings

Maximum number  of results  to print (50  by default  for convenience,
when there can be more than a hundred results).

: (setf *nb-results* 50)

** Tutorial

   Writing   a   little   web   scraper   like   this   one   is   not
   difficult. However, I had to spend  some time to find out the right
   libraries and resources.  It is also  not trivial at first to start
   a  Lisp project.  So this  tutorial is  a mix  of hopefully  useful
   stuff:

- web scraping,
- async web scraping,
- trying out things at the REPL,
- where to find documentation,
- creating and loading a project,
- basic data structures and gotchas,
- some useful libraries,
- unit tests, with mocks, running tests from the shell,
- creating executables, command line arguments,
- ...

  It will eventually  tackle more topics and  features (more settings,
  working with a local copy of TPB…) but in the meanwhile, read

  the [[https://vindarel.github.io/cl-torrents/tutorial.html][tutorial]] !

** Ideas, todos

- [X] cache (on files) v0.3
- [X] CI
- local copy of TPB
- more command line options (specially verbosity)
- open an url
- download the torrent file
- generate a json
- ini config file, to parse with [[https://common-lisp.net/project/py-configparser/][py-configparser]]
- self-contained web app,...

** Theme

  The tutorial was built with https://github.com/fniessen/org-html-themes.


* Resources

  Don't miss these good resources:

- http://lisp-lang.org/
- [[Https://github.com/CodyReichert/awesome-cl][Awesome-cl]]
- [[https://lispcookbook.github.io/cl-cookbook/][the Common Lisp Cookbook]]
- http://quickdocs.org/


* Setting up a Common Lisp environment

  The  easiest solution  of all  is to  try [[https://portacle.github.io/][Portacle]],  a portable  and
  multiplatform CL  environment shipping: Emacs25 and  Slime (slightly
  customized), SBCL, Quicklisp and Git.

  Otherwise:

: apt install sbcl rlwrap
: rlwrap sbcl

   and install Quicklisp (two commands) and Slime for Emacs (in MELPA,
   with   package.el)  or   try  Atom-slime   or  Vim   package.   See
   [[http://lisp-lang.org/wiki/article/editors][http://lisp-lang.org/wiki/article/editors]].
